      - name: Deploy on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd food-app

            echo "Stopping and removing old Docker container..."
            docker stop food-app || true
            docker rm food-app || true

            echo "Killing any process using port 3000..."
            sudo fuser -k 3000/tcp || true

            echo "Optional: Prune unused Docker resources"
            docker system prune -f

            echo "Building Docker image..."
            docker build -t food-app .

            echo "Waiting briefly to ensure port 3000 is freed..."
            sleep 5

            echo "Running Docker container..."
            docker run -d --name food-app -p 3000:3000 food-app
          EOF

      - name: Deploy on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd food-app

            # Stop and remove any container named food-app
            docker stop food-app || true
            docker rm food-app || true

            # Optionally kill any process using port 3000 (just in case)
            sudo fuser -k 3000/tcp || true

            # Build the new Docker image
            docker build -t food-app .

            # Run container with port 3000 exposed
            docker run -d --name food-app -p 3000:3000 food-app
          EOF
