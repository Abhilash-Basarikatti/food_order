name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Prepare folder on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "rm -rf food-app && mkdir food-app"

      - name: Copy files to EC2
        run: |
          scp -i ec2_key.pem -r * ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/food-app

      - name: Deploy on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd food-app

            echo "Stopping existing Docker Compose services..."
            docker-compose down --volumes --remove-orphans

            echo "Removing existing images..."
            docker-compose rm -f -s -v

            echo "Killing any process listening on port 3000..."
            sudo fuser -k 3000/tcp || true

            echo "Double check for any process using port 3000..."
            sudo lsof -t -i:3000 | xargs -r sudo kill -9 || true

            echo "Cleaning up unused Docker resources..."
            docker system prune -af --volumes

            echo "Building and starting Docker Compose services with no cache..."
            docker-compose build --no-cache
            docker-compose up -d

            echo "Checking service status..."
            docker-compose ps
          EOF
